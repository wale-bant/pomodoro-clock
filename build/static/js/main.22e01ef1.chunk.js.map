{"version":3,"sources":["components/BreakLenght.jsx","components/SessionLenght.jsx","components/Timer.jsx","components/Pomodoro.jsx","components/theme.js","App.jsx","index.js"],"names":["BreakLength","breakInterval","isRunning","decrementBreak","incrementBreak","className","Text","id","fontSize","IconButton","aria-label","icon","disabled","onClick","style","color","SessionLength","sessionInterval","setMinutes","incrementSession","decrementSession","prev","Timer","props","reset","clearInterval","state","intervalId","document","querySelector","pause","currentTime","running","setIsSession","setState","seconds","setBreakInterval","setSessionInterval","start","setInterval","countDown","this","minutes","play","isSession","toggleInterval","decreaseMinutes","showMin","showSec","CircularProgress","value","max","size","min","thickness","capIsRound","trackColor","Tooltip","label","placement","Editable","defaultValue","preload","src","as","AiOutlinePause","TiMediaPlayOutline","variantColor","Component","Pomodoro","useState","setIsRunning","increment","element","decrement","bool","target","rel","href","customTheme","theme","colors","brand","900","800","700","App","ThemeProvider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.22e01ef1.chunk.js","sourcesContent":["import React from 'react'\nimport { IconButton, Text } from \"@chakra-ui/core\";\n\nconst BreakLength = ({ breakInterval, isRunning, decrementBreak, incrementBreak }) => {\n    const decrement = () => {\n        if(breakInterval < 2) {return}\n        decrementBreak()\n    }\n    \n    const increment = () => {\n        if(breakInterval === 60) {return}\n        incrementBreak()\n    }\n\n    return (\n        <section className='lenght-container'>\n            <Text id=\"break-label\" fontSize=\"sm\">Break Length</Text>\n            <IconButton aria-label=\"decrease break length\" icon=\"minus\" disabled={isRunning && true} id=\"break-decrement\" onClick={decrement} />\n                <span className='length' style={{color: breakInterval === 60 && \"orange\"}} id=\"break-length\">{breakInterval}</span>\n            <IconButton aria-label=\"increase break length\" icon=\"add\" disabled={isRunning && true} id=\"break-increment\" onClick={increment} />\n        </section>\n    )\n}\n\nexport default BreakLength;","import React from 'react'\nimport { Text, IconButton } from \"@chakra-ui/core\";\n\nconst SessionLength = ({ sessionInterval, isRunning, setMinutes, incrementSession, decrementSession}) => {\n\n    const decrement = () => {\n        if(sessionInterval < 2) {return}\n        decrementSession()\n        setMinutes(prev => prev - 1)\n    }\n    const increment = () => {\n        if(sessionInterval === 60) {return}\n        incrementSession()\n        setMinutes(prev => prev + 1)\n    }\n\n    return (\n        <section className='lenght-container'>\n            <Text id=\"session-label\" fontSize=\"sm\">Session Length</Text>\n            <IconButton aria-label=\"decrease session length\" icon=\"minus\" disabled={isRunning && true} id=\"session-decrement\" onClick={decrement} />\n                <span className='length' style={{color: sessionInterval === 60 && \"orange\"}} id=\"session-length\">{sessionInterval}</span>\n            <IconButton aria-label=\"increase session length\" icon=\"add\" disabled={isRunning && true} id=\"session-increment\" onClick={increment} />\n        </section>\n    )\n}\n\nexport default SessionLength;","import React, { Component } from \"react\";\nimport { AiOutlinePause } from 'react-icons/ai'\nimport { TiMediaPlayOutline } from 'react-icons/ti'\nimport { CircularProgress, CircularProgressLabel, Tooltip, IconButton } from \"@chakra-ui/core\";\nimport { Editable, EditableInput, EditablePreview } from \"@chakra-ui/core\";\n\nclass Timer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            seconds: 0,\n            intervalId: ''\n        }\n    }\n    \n    countDown() {\n        switch(this.state.seconds) {\n            case 0:\n                if(this.props.minutes === 0 ) {\n                    document.querySelector('#beep').play()\n                    if(this.props.isSession) {\n                        this.props.setIsSession(false)\n                        this.props.toggleInterval()\n                    } else{\n                        this.props.setIsSession(true)\n                        this.props.toggleInterval()\n                    }\n                }\n                this.props.decreaseMinutes()\n                this.setState({\n                    seconds: 59\n                })\n                break;\n            default:\n                this.setState((prev) => { return {seconds: prev.seconds - 1}})\n                break;\n        }\n    }\n\n    reset = () => {\n        clearInterval(this.state.intervalId)\n        document.querySelector('#beep').pause()\n        document.querySelector('#beep').currentTime = 0\n        this.props.running(false)\n        this.props.setMinutes(25)\n        this.props.setIsSession(true)\n        this.setState({seconds: 0})\n        this.props.setBreakInterval(5)\n        this.props.setSessionInterval(25)\n    } \n    \n    start = () => {\n        if(this.props.isRunning) {\n            clearInterval(this.state.intervalId)\n            this.props.running(false)\n        } else {\n            this.props.running(true)\n            const intervalId = setInterval(() => this.countDown(), 1000);\n            this.setState({\n                intervalId: intervalId\n            })\n            this.props.isRunning && clearInterval(this.state.intervalId)\n        }\n    }\n\n    render() {\n        const showMin = this.props.minutes < 10 ? `0${this.props.minutes}` : this.props.minutes;\n        const showSec = this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds;\n        \n        return (\n            <>\n            <CircularProgress \n                value={this.props.minutes}\n                max={this.props.sessionInterval}\n                size=\"250px\"\n                min={0} \n                thickness={0.1}\n                color={this.props.minutes < this.props.sessionInterval/5 ? \"orange\" : \"green\"}\n                capIsRound={true}\n                trackColor={this.props.minutes < this.props.sessionInterval/5 ? \"orange\" : \"gray\"} >\n                <CircularProgressLabel id=\"time-left\">\n                    {showMin}:{showSec}\n                </CircularProgressLabel>\n                <CircularProgressLabel id=\"timer-label\">\n                    {this.props.isSession ?\n                        (\n                            <Tooltip label=\"Edit session title\" placement=\"bottom\">\n                            <Editable defaultValue=\"Session\">\n                                <EditablePreview />\n                                <EditableInput />\n                            </Editable>\n                            </Tooltip>\n                        )\n                        : 'Break'}\n                    </CircularProgressLabel>\n            </CircularProgress>\n            <audio id=\"beep\" preload=\"auto\" src=\"https://goo.gl/65cBl1\" />\n            \n            <div className=\"start_stop_reset_container\">\n                <IconButton as={this.props.isRunning ? AiOutlinePause : TiMediaPlayOutline} aria-label=\"play/pause timer\" variantColor={this.props.isRunning ? \"orange\" : \"green\"} id=\"start_stop\" onClick={this.start} />\n                <Tooltip label=\"Reset\" placement=\"right\">\n                    <IconButton aria-label=\"reset timer\" icon=\"repeat\" variantColor={this.props.isRunning ? \"orange\" : \"green\"} id=\"reset\" onClick={this.reset} />\n                </Tooltip>\n            </div>\n        </>\n        )\n    }\n}\n\nexport default Timer;\n","import React, { useState } from \"react\";\nimport BreakLength from './BreakLenght'\nimport SessionLength from './SessionLenght'\nimport Timer from './Timer'\n\nconst Pomodoro = () => {\n    const [minutes, setMinutes] = useState(25)\n    const [isSession, setIsSession] = useState(true)\n    const [isRunning, setIsRunning] = useState(false)\n    const [breakInterval, setBreakInterval] = useState(5)\n    const [sessionInterval, setSessionInterval] = useState(25)\n\n    const increment = (element) => element(prev => prev + 1);\n    const decrement = (element) => element(prev => prev - 1);\n    \n    const decreaseMinutes = () => setMinutes(prev => prev - 1)\n\n    const toggleInterval = () => {\n        isSession ? setMinutes(sessionInterval) : setMinutes(breakInterval)\n    }\n\n    const running = (bool) => setIsRunning(bool)\n\n    return (\n        <div className=\"container\">\n            <Timer minutes={minutes} \n                setSessionInterval={setSessionInterval}\n                setBreakInterval={setBreakInterval}\n                sessionInterval={sessionInterval} \n                decreaseMinutes={decreaseMinutes}\n                toggleInterval={toggleInterval}\n                running={running}\n                setIsSession={setIsSession} \n                setMinutes={setMinutes}\n                isRunning={isRunning}\n                isSession={isSession}\n             />\n\n            <BreakLength \n                isRunning={isRunning}\n                breakInterval={breakInterval} \n                incrementBreak={() => increment(setBreakInterval)} \n                decrementBreak={() => decrement(setBreakInterval)} />\n\n            <SessionLength \n                isRunning={isRunning}\n                sessionInterval={sessionInterval}\n                incrementSession={() => increment(setSessionInterval)} \n                decrementSession={() => decrement(setSessionInterval)}\n                setMinutes={setMinutes} />\n            \n            <footer>\n                Design & Coded by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://waledev.com\">wale_bant</a>\n            </footer>\n        </div>\n    )\n}\n\nexport default Pomodoro;\n","import { theme } from '@chakra-ui/core'\n\nconst customTheme = {\n    ...theme,\n    colors: {\n        ...theme.colors,\n        brand: {\n            900: \"#1a365d\",\n            800: \"#153e75\",\n            700: \"#2a69ac\",\n        }\n    }\n}\n\nexport default customTheme;","import React, { Component } from \"react\";\nimport Pomodoro from './components/Pomodoro'\nimport customTheme from './components/theme'\nimport { ThemeProvider } from '@chakra-ui/core' \nimport \"./App.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <ThemeProvider theme={customTheme}>\n          <Pomodoro />\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n \nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}